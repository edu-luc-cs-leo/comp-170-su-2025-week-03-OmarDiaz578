
#Diamond Shape
    #function that takes the input "height" and draws diamond shape
def draw_diamond(height):

#Upper + Middle parts of the diamond:

    for i in range(height // 2 + 1):
    # This for loop creates the rows for the diamond 
    # Takes the total height of the diamond and divides it by 2 since the diamond has 2 proportional halves 
    # The + 1 is to include the middle row

        spaces = " " * (height // 2 - i)
        # This calculates the number of spaces needed per line
        # As i increases less spaces will be needed 

        hash = "#" * (2 * i + 1)
        # This calculates the number of hash marks needed in each row
        # The number of hash marks increases as i (row number) increases 

        print(spaces + hash)
        # This prints the needed spaces and hash per row

#Lower part of the diamond

    for i in range(height // 2 -1, -1, -1):
    # This creates a loop for the bottom half of the diamond 
    # Subtracting one makes it so it creates the rows starting below the middle
    # The stop value "-1" is needed to include 0, making sure the lowest has is printed
    # The step value "-1" makes it so that the loop counts backwards

        spaces = " " * (height // 2 - i)
        # This calculates the number of spaces needed per line
        # As i increases less spaces will be needed 

        hash = "#" * (2 * i + 1)
        # This calculates the number of hash marks needed in each row
        # The number of hash marks increases as i (row number) increases 

        print(spaces + hash)
        # This prints the needed spaces and hash per row

draw_diamond(13)
# This calls the "draw_diamond" function with a height of 13
# Drawing a diamond with 13 rows

#Right triangle
    #function that takes input "height" and draws right triangle
def draw_right_triangle(height):
        
        
        for i in range(1, height + 1):
        # This is a loop that runs for each row of the triangle
        # The range() starts from 1 since if it starts at 0 nothing would get printed
        # The range stops at (height + 1) so it prints up to and including the height

             print('#' * i)
             # This prints teh corresponding number of hash marks for each row

draw_right_triangle(7)
# This calls the "draw_right_triangle" function with a height of 7
# Drawing a right triangle with 7 rows

#Compound interest
    #function that takes the inputs "amount, annual_rate, years" and gives total amount of money accumulated
def compound_interest(amount, interest_rate, years):
     
     for years in range(years):
     # This is a loop that repeats for the amount of years given


          interest = amount * interest_rate
          # This calculates the interest from the given amount later to be used

          amount += interest
          # This takes the interest and adds it to the amount given
     return amount
     # Sends back the amount after the compound_interest() function runs
     # The values is then saved in final_amount

final_amount = compound_interest(1000, 0.05, 5)
# Calls the function compound_interest with the entered variables
# The returned value is stored in final_amount

print(f"Your total amount of money is ${final_amount:.2f}")
# Prints a message letting you know the money you have accumalted after the given years
# Uses an f string to include the final_amount variable along with rounding and displaying the value with 2 decimal places

#Hollow square
    #Function that takes the inputs "size, thickness" and draws a hollow square
def draw_hollow_square(size, thickness):

    #Top Border
    for i in range(thickness):
         
         
    